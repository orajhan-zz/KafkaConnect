apiVersion: v1
kind: Service
metadata:
  name: oss-kafka-connect-service
  labels:
    app: oss-kafka-connect
spec:
  # If you are not using Ingress controller, please add the following LB. I am using Ngnix Ingress controller, hence I removed it
  # type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8083
  selector:
    app: oss-kafka-connect
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oss-kafka-connect-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oss-kafka-connect
  template:
    metadata:
      labels:
        app: oss-kafka-connect
    spec:
      containers:
        - name: oss-kafka-connect
          # using customized kafka connec image that has ADB wallet and Oracle JDBC
          image: lhr.ocir.io/tenancy_name/repo_name/kafkaconflent:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: connect-distributed
              mountPath: /kafka/config.orig/connect-distributed.properties
              subPath: connect-distributed.properties
          env:
            - name: GROUP_ID
              value: "oss-kafka-sink-connector"
            - name: BOOTSTRAP_SERVERS
              value: "cell-1.streaming.uk-london-1.oci.oraclecloud.com:9092"
            - name: CONFIG_STORAGE_TOPIC
              value: "ocid1.connectharness.*********************-config"
            - name: OFFSET_STORAGE_TOPIC
              value: "ocid1.connectharness.*********************-offset"
            - name: STATUS_STORAGE_TOPIC
              value: "ocid1.connectharness.*********************-status"
          ports:
            - name: kafka-connect
              containerPort: 8083
              protocol: TCP
      volumes:
        - name: connect-distributed
          configMap:
            name: oss-kafka-connect-configmap
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      imagePullSecrets:
        - name: jhansecret
